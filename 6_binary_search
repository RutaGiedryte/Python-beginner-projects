import random
import time

def naive_search(list, target):
    for i in range(len(list)):
        if list[i] == target:
            return i
    return -1


def binary_search(list, target, low = None, high = None):
    if low is None:
        low = 0
    if high is None:
        high = len(list) - 1
    
    if high < low:
        return -1
    middle = (low + high) // 2

    if list[middle] == target:
        return middle
    elif target < list[middle]:
        return binary_search(list, target, low, middle - 1)
    else:
        return binary_search(list, target, middle + 1, high)



if __name__ == '__main__':
    length = 10000
    sorted_list = set()

    while len(sorted_list) < length:
        sorted_list.add(random.randint(-3*length, 3*length))
    sorted_list = sorted(list(sorted_list))

    start_time = time.time()
    for target in sorted_list:
        naive_search(sorted_list, target)
    end_time = time.time()
    print("naive_search time is ", (end_time - start_time))

    start_time = time.time()
    for target in sorted_list:
        binary_search(sorted_list, target)
    end_time = time.time()
    print("binary_search time is ", (end_time - start_time))